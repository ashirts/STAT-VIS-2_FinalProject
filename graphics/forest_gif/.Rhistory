left_join(continent_mins, by = "Continent") %>%
mutate(
Temperature_Change_Celsius = pmax(Temperature_Change_Celsius, continent_min)
) %>%
select(-continent_min)
temperature_long <- temperature_long %>%
group_by(Country) %>%
arrange(Year) %>%
mutate(Temperature_Change_Celsius = na.approx(Temperature_Change_Celsius, x = Year, na.rm = FALSE)) %>%
fill(Temperature_Change_Celsius, .direction = "downup") %>%
ungroup()
africa   <- filter(temperature_long, Continent == "Africa")
americas <- filter(temperature_long, Continent == "Americas")
asia     <- filter(temperature_long, Continent == "Asia")
europe   <- filter(temperature_long, Continent == "Europe")
oceania  <- filter(temperature_long, Continent == "Oceania")
# line plot
temperature_long %>%
group_by(Year) %>%
summarise(Global_Avg_Change = mean(Temperature_Change_Celsius)) %>%
ggplot(aes(x = Year, y = Global_Avg_Change)) +
geom_line(linewidth = 1.2) +
labs(title = "Global Average Temperature Change Over Time",
y = "Temperature Change (°C)", x = "Year") +
theme_minimal()
# heatmap
temperature_long %>%
mutate(Country = fct_rev(factor(Country, levels = sort(unique(Country))))) %>%
ggplot(aes(x = Year, y = Country, fill = Temperature_Change_Celsius)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Temperature Change Heatmap by Country and Year",
x = "Year", y = "Country", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 2.5))
# heatmaps by continent
global_min <- min(temperature_long$Temperature_Change_Celsius, na.rm = TRUE)
global_max <- max(temperature_long$Temperature_Change_Celsius, na.rm = TRUE)
heatmap_continent <- function(df, region_name, global_min, global_max) {
df %>%
filter(Continent == region_name) %>%
mutate(Country = fct_rev(factor(Country, levels = sort(unique(Country))))) %>%
ggplot(aes(x = Year, y = Country, fill = Temperature_Change_Celsius)) +
geom_tile() +
scale_fill_viridis_c(option = "C", limits = c(global_min, global_max)) +
labs(title = paste("Temperature Change in", region_name, "(1961–2023)"),
x = "Year", y = "Country", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 5),
plot.title = element_text(face = "bold", size = 14))
}
heatmap_continent(temperature_long, "Africa", global_min, global_max)
heatmap_continent(temperature_long, "Americas", global_min, global_max)
heatmap_continent(temperature_long, "Asia", global_min, global_max)
heatmap_continent(temperature_long, "Europe", global_min, global_max)
heatmap_continent(temperature_long, "Oceania", global_min, global_max)
# faceted line plots by region
region_lists <- list(
Africa = africa,
Americas = americas,
Asia = asia,
Europe = europe,
Oceania = oceania
)
for (region_name in names(region_lists)) {
df <- region_lists[[region_name]]
p <- ggplot(df, aes(x = Year, y = Temperature_Change_Celsius, color = Country)) +
geom_line(linewidth = 0.7) +
ylim(global_min, global_max) +
facet_wrap(~Country, scales = "fixed") +
labs(
title = paste("Temperature Change Over Time in", region_name),
y = "Temperature Change (°C)", x = "Year"
) +
theme_minimal() +
theme(
legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14)
)
print(p)
ggsave(
filename = paste0("temperature_plot_", region_name, ".png"),
plot = p,
width = 12, height = 8
)
}
# boxplots for global temp change by decade
temperature_long %>%
mutate(Decade = paste0(floor(Year / 10) * 10, "s")) %>%
ggplot(aes(x = Decade, y = Temperature_Change_Celsius)) +
geom_boxplot(fill = "skyblue") +
labs(title = "Distribution of Temperature Change by Decade",
y = "Temperature Change (°C)", x = "Decade") +
theme_minimal()
#animated map of temperature change per country by decade
temperature_long <- temperature_long %>%
mutate(
iso_a3 = ISO3,
Decade = factor(paste0(floor(Year / 10) * 10, "s"))
)
temperature_decade <- temperature_long %>%
group_by(iso_a3, Decade) %>%
summarise(Avg_Temp_Change = mean(Temperature_Change_Celsius, na.rm = TRUE), .groups = "drop")
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
mutate(iso_a3 = iso_a3_eh)
decades <- unique(temperature_decade$Decade)
world_expanded <- world %>%
slice(rep(1:n(), each = length(decades))) %>%
mutate(Decade = rep(decades, times = nrow(world)))
map_data <- left_join(world_expanded, temperature_decade, by = c("iso_a3", "Decade"))
p <- ggplot(map_data) +
geom_sf(aes(fill = Avg_Temp_Change), color = "gray70", size = 0.1) +
scale_fill_viridis_c(option = "C", na.value = "grey90") +
labs(
title = "Average Temperature Change by Country",
subtitle = "Decade: {closest_state}",
fill = "Temp Change (°C)"
) +
theme_minimal() +
theme(legend.position = "right") +
transition_states(Decade, transition_length = 2, state_length = 1) +
ease_aes("linear")
animate(p, width = 1000, height = 500, fps = 4)
anim_save("temperature_change_by_decade.gif", animation = last_animation())
anim <- animate(p, width = 1000, height = 500, fps = 4, renderer = gifski_renderer())
anim_save("temperature_change_by_decade.gif", animation = anim)
FaC <- rcountrycodeFaC <- read_csv("data/forest_and_carbon.csv")
FaC <- rcountrycodeFaC <- read_csv("data/forest_carbon.csv")
FaC3 <- FaC %>%
filter(!Country %in% c("Africa", "Americas", "Asia", "Euro Area", "Oceania")) %>%
select(-c(Country, ISO2, Source, CTS_Code, CTS_Name, CTS_Full_Descriptor)) %>%
filter(Indicator %in% c("Carbon stocks in forests", "Forest area"))
Forest.long2 <- FaC3 %>%
filter(Indicator %in% c("Forest area")) %>%
pivot_longer(cols = starts_with("F"),
names_to = "Year", values_to = "ForestArea") %>%
mutate(Year = as.numeric(sub("^F", "", Year))) %>%
mutate(Decade = paste0(floor(Year / 10) * 10, "s"))
Carbon.long2 <- FaC3 %>%
filter(Indicator %in% c("Carbon stocks in forests")) %>%
pivot_longer(cols = starts_with("F"),
names_to = "Year", values_to = "Carbon") %>%
mutate(Year = sub("^F", "", Year))
forest_decade <- Forest.long2 %>%
group_by(ISO3, Decade) %>%
filter(ISO3 != "QAT") %>%
summarize(AvgForestArea = mean(ForestArea)) %>%
mutate(iso_a3 = ISO3,
forestLog = log(AvgForestArea)) %>%
filter(!is.na(forestLog))
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
mutate(iso_a3 = iso_a3_eh)
decade_split <- function(decade_choice){
forest10 <- forest_decade %>%
filter(Decade == decade_choice)
print(head(forest10))
decades <- unique(forest10$Decade)
print(head(decades))
world_expanded <- world %>%
slice(rep(1:n(), each = length(decades))) %>%
mutate(Decade = rep(decades, times = nrow(world)))
map_data <- left_join(world_expanded, forest10, by = c("iso_a3"))
}
decade_split("1990s")
p <- ggplot(map_data) +
geom_sf(aes(fill = forestLog), color = "gray70", size = 0.1) +
scale_fill_viridis_c(option = "E", na.value = "grey90", direction = -1) +
labs(
title = "Log of forest area",
subtitle = "",
fill = ""
) +
theme_minimal() +
theme(legend.position = "right")
p
FaC <- read_csv("forest_carbon.csv")
FaC <- read_csv("data/forest_carbon.csv")
FaC3 <- FaC %>%
filter(!Country %in% c("Africa", "Americas", "Asia", "Euro Area", "Oceania")) %>%
rename(CTS_Code = `CTS Code`, CTS_Name = `CTS Name`,
CTS_Full_Descriptor = `CTS Full Descriptor`) |>
select(-c(Country, ISO2, Source, CTS_Code, CTS_Name, CTS_Full_Descriptor)) %>%
filter(Indicator %in% c("Carbon stocks in forests", "Forest area"))
FaC
}
FaC <- read_csv("data/forest_carbon.csv")
FaC3 <- FaC %>%
filter(!Country %in% c("Africa", "Americas", "Asia", "Euro Area", "Oceania")) %>%
select(-c(Country, ISO2, Source, CTS_Code, CTS_Name, CTS_Full_Descriptor)) %>%
filter(Indicator %in% c("Carbon stocks in forests", "Forest area"))
Forest.long2 <- FaC3 %>%
filter(Indicator == "Forest area") %>%
pivot_longer(cols = starts_with("F"),
names_to = "Year", values_to = "ForestArea") %>%
mutate(Year = as.numeric(sub("^F", "", Year)),
Decade = paste0(floor(Year / 10) * 10, "s"))
Carbon.long2 <- FaC3 %>%
filter(Indicator == "Carbon stocks in forests") %>%
pivot_longer(cols = starts_with("F"),
names_to = "Year", values_to = "Carbon") %>%
mutate(Year = as.numeric(sub("^F", "", Year)))
forest_decade <- Forest.long2 %>%
group_by(ISO3, Decade) %>%
filter(ISO3 != "QAT") %>%
summarize(AvgForestArea = mean(ForestArea, na.rm = TRUE)) %>%
mutate(iso_a3 = ISO3,
forestLog = log(AvgForestArea)) %>%
filter(!is.na(forestLog))
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
mutate(iso_a3 = iso_a3_eh)
decade_split <- function(decade_choice){
forest10 <- forest_decade %>%
filter(Decade == decade_choice)
decades <- unique(forest10$Decade)
world_expanded <- world %>%
slice(rep(1:n(), each = length(decades))) %>%
mutate(Decade = rep(decades, times = nrow(world)))
map_data <- left_join(world_expanded, forest10, by = c("iso_a3", "Decade"))
return(map_data)
}
map_data <- decade_split("1990s")
p <- ggplot(map_data) +
geom_sf(aes(fill = forestLog), color = "gray70", size = 0.1) +
scale_fill_gradientn(
colours = c("#8B4513", "#DEB887", "#ADFF2F", "#006400"),
na.value = "grey90"
) +
labs(
title = "Log of Forest Area by Country",
subtitle = "1990s",
fill = "Log Forest\nArea"
) +
theme_minimal() +
theme(legend.position = "right")
p
# animated plot
Forest.long2 <- FaC3 %>%
filter(Indicator == "Forest area") %>%
pivot_longer(cols = starts_with("F"),
names_to = "Year", values_to = "ForestArea") %>%
mutate(
Year = as.numeric(sub("^F", "", Year)),
iso_a3 = ISO3,
Decade = factor(paste0(floor(Year / 10) * 10, "s"))
)
forest_decade <- Forest.long2 %>%
filter(ISO3 != "QAT") %>%
group_by(iso_a3, Decade) %>%
summarise(
Avg_Forest_Area = mean(ForestArea, na.rm = TRUE),
.groups = "drop"
) %>%
mutate(
forestLog = log(Avg_Forest_Area)
) %>%
filter(!is.na(forestLog))
world <- ne_countries(scale = "medium", returnclass = "sf") %>%
mutate(iso_a3 = iso_a3_eh)
decades <- unique(forest_decade$Decade)
world_expanded <- world %>%
slice(rep(1:n(), each = length(decades))) %>%
mutate(Decade = rep(decades, times = nrow(world)))
map_data <- left_join(world_expanded, forest_decade, by = c("iso_a3", "Decade"))
p <- ggplot(map_data) +
geom_sf(aes(fill = forestLog), color = "gray70", size = 0.1) +
scale_fill_gradientn(
colours = c("#8B4513", "#DEB887", "#ADFF2F", "#006400"),
na.value = "grey90"
) +
labs(
title = "Average Forest Area by Country (Log Scale)",
subtitle = "Decade: {closest_state}",
fill = "Log Forest\nArea"
) +
theme_minimal() +
theme(legend.position = "right") +
transition_states(Decade, transition_length = 2, state_length = 1) +
ease_aes("linear")
anim <- animate(p, width = 1000, height = 500, fps = 4, renderer = gifski_renderer())
anim_save("forest_area_by_decade.gif", animation = anim)
setwd("~/Documents/Grad School/Stat6560/final project/STAT-VIS-/graphics/forest_gif")
reticulate::repl_python()
sea_levels
sea_levels %>%
mutate(measured_year = str_extract(Date, "[[:digit:]]{4}$"))
# puts temp data in long form
sea_long <- sea_levels %>%
mutate(measured_year = str_extract(Date, "[[:digit:]]{4}$"))
unique(sea_long$Country)
sea_long %>%
mutate(Measure = fct_rev(factor(Measure, levels = sort(unique(Measure))))) %>%
ggplot(aes(x = measured_year, y = Measure, fill = Value)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Sea Level by Region and Year",
x = "Year", y = "Region", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 3.8))
sea_long %>%
mutate(Measure = fct_rev(factor(Measure, levels = sort(unique(Measure))))) %>%
ggplot(aes(x = measured_year, y = Measure, fill = Value)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Sea Level by Region and Year",
x = "Year", y = "Region", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 5))
sea_long %>%
mutate(Measure = fct_rev(factor(Measure, levels = sort(unique(Measure))))) %>%
ggplot(aes(x = measured_year, y = Measure, fill = Value)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Sea Level by Region and Year",
x = "Year", y = "Region", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 5), axis.text.x = element_text(size = 8))
sea_long %>%
mutate(Measure = fct_rev(factor(Measure, levels = sort(unique(Measure))))) %>%
ggplot(aes(x = measured_year, y = Measure, fill = Value)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Sea Level by Region and Year",
x = "Year", y = "Region", fill = "Temp Change (°C)") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8), axis.text.x = element_text(size = 8))
sea_long %>%
mutate(Measure = fct_rev(factor(Measure, levels = sort(unique(Measure))))) %>%
ggplot(aes(x = measured_year, y = Measure, fill = Value)) +
geom_tile() +
scale_fill_viridis_c(option = "C") +
labs(title = "Sea Level by Region and Year",
x = "Year", y = "Region", fill = "Sea Level Change") +
theme_minimal() +
theme(axis.text.y = element_text(size = 8), axis.text.x = element_text(size = 8))
ggplot(data = sea_long, aes(x =measured_year, y = Value, color = Measure)) +
geom_line(linewidth = 0.7) +
ylim(global_min, global_max) +
facet_wrap(~Country, scales = "fixed") +
labs(title = paste("Sea Level change in", region_name),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
ggplot(data = sea_long, aes(x =measured_year, y = Value, color = Measure)) +
geom_line(linewidth = 0.7) +
ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
ggplot(data = sea_long, aes(x =measured_year, y = Value, color = Measure)) +
geom_line(linewidth = 0.7) +
coord_cartesian(ylim = c(global_min, global_max))
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
ggplot(data = sea_long, aes(x =measured_year, y = Value, color = Measure)) +
geom_line(linewidth = 0.7) +
coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_line(linewidth = 0.7) +
coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( es(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 0.45, size = 8))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, size = 8))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 90, size = 6))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, size = 6))
sea_long %>% group_by(measured_year, Measure) %>%
summarize(avg_level = mean(Value)) %>%
ggplot( aes(x = measured_year, y = avg_level, color = Measure)) +
geom_point(size = 1.5) +
#coord_cartesian(ylim = c(global_min, global_max)) +
#ylim(global_min, global_max) +
facet_wrap(~Measure, scales = "fixed") +
labs(title = paste("Sea Level change by Sea"),
y = "Sea Level Change", x = "Year") +
theme_minimal() +
theme(legend.position = "none",
strip.text = element_text(size = 7),
plot.title = element_text(face = "bold", size = 14),
axis.text.x = element_text(angle = 45, size = 5))
